trigger:
- main  # Cambia si usas otra rama

pool:
  vmImage: 'ubuntu-latest'

variables:
  pythonVersion: '3.11'

steps:
# Seleccionar versión de Python
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(pythonVersion)'

# Instalar dependencias y preparar Django
- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
    python manage.py migrate
    python manage.py collectstatic --noinput
  displayName: 'Instalar dependencias y preparar Django'

# Publicar archivos para despliegue
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '.'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
    replaceExistingArchive: true
  displayName: 'Crear archivo ZIP del proyecto'

# Publicar el artefacto
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/app.zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publicar artefactos'

# Desplegar en Azure App Service
- task: AzureWebApp@1
  inputs:
    azureSubscription: '<nombre-conexion-azure>'  # <- Reemplaza con el nombre exacto de tu conexión
    appName: '<nombre-app-service>'               # <- Reemplaza con el nombre de tu App Service
    package: '$(Build.ArtifactStagingDirectory)/app.zip'
  displayName: 'Desplegar a Azure App Service'
